<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicau.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.sicau.entity.dto.Project">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    <id column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="project_time" jdbcType="VARCHAR" property="projectTime" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_requirement" jdbcType="VARCHAR" property="projectRequirement" />
    <result column="project_describe" jdbcType="VARCHAR" property="projectDescribe" />
    <result column="project_price" jdbcType="VARCHAR" property="projectPrice" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    delete from project
    where project_id = #{projectId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sicau.entity.dto.Project">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    insert into project (project_id, project_time, project_name, 
      project_requirement, project_describe, project_price
      )
    values (#{projectId,jdbcType=VARCHAR}, #{projectTime,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, 
      #{projectRequirement,jdbcType=VARCHAR}, #{projectDescribe,jdbcType=VARCHAR}, #{projectPrice,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sicau.entity.dto.Project">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    update project
    set project_time = #{projectTime,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR},
      project_requirement = #{projectRequirement,jdbcType=VARCHAR},
      project_describe = #{projectDescribe,jdbcType=VARCHAR},
      project_price = #{projectPrice,jdbcType=VARCHAR}
    where project_id = #{projectId,jdbcType=VARCHAR}
  </update>
  <update id="updateStateById">
        update project set state = #{state},release_time = #{data} where project_id = #{projectId}
    </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    select project_id, project_time, project_name, project_requirement, project_describe, 
    project_price
    from project
    where project_id = #{projectId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Feb 01 16:05:07 CST 2019.
    -->
    select project_id, project_time, project_name, project_requirement, project_describe, 
    project_price,project_time,user_id,state
    from project
  </select>

  <select id="selectProjectById" resultType="com.sicau.entity.dto.Project">
        select * from project where project_id = #{projectId}
    </select>
  <!--项目根据状态分类，多个状态以逗号隔开-->
  <select id="projectsClassifyByState"  resultType="com.sicau.entity.dto.Project">
    SELECT
           project_name
    FROM
         project
    WHERE
          state in (
            <foreach collection="state" item="state" separator=",">
                #{state}
            </foreach>
            )
  </select>
    <select id="selectProjectByUserId" resultType="java.lang.String">
       select project_id from project where user_id = #{teamId}
    </select>
<!--获取未承接的项目信息-->
  <select id="selectUnUnderTakeProject" resultType="java.util.Map">
    SELECT project.project_id projectId,project_time projectTime,project_name projectName,project_requirement projectRequirement,project_describe projectDescribe,project_price projectPrice,
           release_time releaseTime,user_id userId,project.state
           from project
             left join undertake on project.project_id = undertake.project_id
    where undertake.project_id is null
  </select>

<!--获取未完成的项目信息-->
  <select id="selectUnCompleteProject" resultType="java.util.Map">
    SELECT project.project_id projectId,project_time projectTime,project_name projectName,project_requirement projectRequirement,project_describe projectDescribe,project_price projectPrice,
           release_time releaseTime,user_id userId,project.state
           FROM project
                  left join undertake on project.project_id = undertake.project_id
                  left join run_project on undertake.undertake_id = run_project.undertake_id
                WHERE  run_project.progress!="已完成"
  </select>

  <!--获取已完成的项目信息-->
  <select id="selectCompleteProject" resultType="java.util.Map">
    SELECT project.project_id projectId,project_time projectTime,project_name projectName,project_requirement projectRequirement,project_describe projectDescribe,project_price projectPrice,
    release_time releaseTime,user_id userId,project.state
            FROM project
                    left join undertake on project.project_id = undertake.project_id
                    left join run_project on undertake.undertake_id = run_project.undertake_id
    WHERE  run_project.progress="已完成"
  </select>

  <select id="selectWaitUnderTakeProject" resultType="java.util.Map">
    SELECT project.project_id,project_time,project_name,project_requirement,project_describe,project_price,
           release_time,user_id,project.state
    from undertake
           left join project on project.project_id = undertake.project_id
           left join run_project on undertake.undertake_id = run_project.undertake_id
    where run_project.undertake_id is null


  </select>



</mapper>